/* 
 * OdometryCorrection.java
 */
package odometer;

import lejos.hardware.sensor.EV3ColorSensor;
import lejos.hardware.sensor.SensorMode;

public class OdometryCorrection extends Thread {
	EV3ColorSensor sensor;
	private static double tileLength = 30.48;
	private static final long CORRECTION_PERIOD = 10;
	private Odometer odometer;

	// constructor
	public OdometryCorrection(Odometer odometer, EV3ColorSensor csensor) {
		this.sensor = csensor;
		this.odometer = odometer;
	}

	// run method (required for Thread)
	public void run() {
		long correctionStart, correctionEnd;
		sensor.setFloodlight(true);
		SensorMode mode = sensor.getRedMode();	
		while (true) {
			correctionStart = System.currentTimeMillis();
			float[] color = new float[mode.sampleSize()];
			mode.fetchSample(color, 0);
			// put your correction code here

			// this ensure the odometry correction occurs only once every period
			correctionEnd = System.currentTimeMillis();
			if (correctionEnd - correctionStart < CORRECTION_PERIOD) {
				try {
					Thread.sleep(CORRECTION_PERIOD
							- (correctionEnd - correctionStart));
				} catch (InterruptedException e) {
					// there is nothing to be done here because it is not
					// expected that the odometry correction will be
					// interrupted by another thread
				}
			}
		}
	}
}